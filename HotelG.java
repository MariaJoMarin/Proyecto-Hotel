/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hotel;

import javax.swing.JOptionPane;
import java.util.Calendar;


/*Para añadir las cosas a la talbla estos son las variables:
    op=Es el que almacena el tipo de habitacion
    reservar=Es el que almacena la cantidad de habitaciones
    fehaIng=Es en el que esta guardado la fecha de la reserva
    noches=Es el que esta guardado la cantidad de dias que se hospedan
    NombreU=Es el nombre del usurio
    cc=Es la cedula de usuario
    correo=Es el correo del usuario
*/

public class HotelG extends javax.swing.JFrame {

    /**
     * Creates new form HotelG
     */
    public HotelG() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmbTipoHabi = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtaInfoHabi = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        txtCantidadHabi = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btnEscogerHabi = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtCantidadDias = new javax.swing.JTextField();
        btnReservar = new javax.swing.JButton();
        dcFechaIngreso = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Sitka Heading", 2, 36)); // NOI18N
        jLabel1.setText("Bienvenido");

        jLabel2.setFont(new java.awt.Font("Sitka Text", 3, 14)); // NOI18N
        jLabel2.setText("Reservación de la habitación");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Por favor el tipo de habitacion que desea");

        cmbTipoHabi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Individual", "Double", "Triple", "Quad", "Queen", "King", "Doble-Doble", "Suite", "Suite presidencial" }));

        txtaInfoHabi.setColumns(20);
        txtaInfoHabi.setRows(5);
        jScrollPane1.setViewportView(txtaInfoHabi);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("¿Cuantas habitaciones desea reservar?");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Selecione la fecha de ingreso");

        btnEscogerHabi.setText("Escoger");
        btnEscogerHabi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEscogerHabiActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("¿Por cuantos dias se va quedar en la habitacion?");

        btnReservar.setText("Reservar");
        btnReservar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReservarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(btnEscogerHabi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtCantidadHabi, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(141, 141, 141))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(cmbTipoHabi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(58, 58, 58))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(btnReservar, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(31, 31, 31))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(316, 316, 316)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(296, 296, 296)
                        .addComponent(jLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(157, 157, 157)
                .addComponent(dcFechaIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtCantidadDias, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(122, 122, 122))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbTipoHabi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEscogerHabi)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(40, 40, 40))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCantidadHabi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dcFechaIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCantidadDias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 146, Short.MAX_VALUE)
                .addComponent(btnReservar, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEscogerHabiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEscogerHabiActionPerformed
        int Nhabitaciones=0;
        float precio=0;
        
        String op = cmbTipoHabi.getSelectedItem().toString();
        if (op.equals("Individual")){
            txtaInfoHabi.setText(null);
            txtaInfoHabi.append("Habitación Individual:Una habitación asignada a una persona. Puede tener una o más camas.\n");
            precio=100;
            txtaInfoHabi.append("El precio por noche: "+precio);
            Nhabitaciones=10;
            txtaInfoHabi.append("\nHabitaciones disponibles: "+Nhabitaciones);
        }
        
        if (op.equals("Double")){
            txtaInfoHabi.setText(null);
            txtaInfoHabi.append("Habitación Double:Una habitación asignada a dos personas. Puede tener una o más camas.\n");
            precio=150;
            txtaInfoHabi.append("El precio por noche: "+precio);
            Nhabitaciones=7;
            txtaInfoHabi.append("\nHabitaciones disponibles: "+Nhabitaciones);
        }
        
        if (op.equals("Triple")){
            txtaInfoHabi.setText(null);
            txtaInfoHabi.append("Habitación Triple:Una habitación asignada a tres personas. Puede tener dos o más camas.\n");
            precio=200;
            txtaInfoHabi.append("El precio por noche: "+precio);
            Nhabitaciones=7;
            txtaInfoHabi.append("\nHabitaciones disponibles: "+Nhabitaciones);
        }
        
        if (op.equals("Quad")){
            txtaInfoHabi.setText(null);
            txtaInfoHabi.append("Habitación Quad:Una sala asignada a cuatro personas. Puede tener dos o más camas.\n");
            precio=250;
            txtaInfoHabi.append("El precio por noche: "+precio);
            Nhabitaciones=7;
            txtaInfoHabi.append("\nHabitaciones disponibles: "+Nhabitaciones);
        }
        
        if (op.equals("Queen")){
            txtaInfoHabi.setText(null);
            txtaInfoHabi.append("Habitación Queen:Una habitación con una cama de matrimonio. Puede ser ocupado por una o más personas.\n");
            precio=200;
            txtaInfoHabi.append("El precio por noche: "+precio);
            Nhabitaciones=8;
            txtaInfoHabi.append("\nHabitaciones disponibles: "+Nhabitaciones);
        }
        
        if (op.equals("King")){
            txtaInfoHabi.setText(null);
            txtaInfoHabi.append("Habitación King:Una habitación con una cama king-size. Puede ser ocupado por una o más personas.\n");
            precio=200;
            txtaInfoHabi.append("El precio por noche: "+precio);
            Nhabitaciones=8;
            txtaInfoHabi.append("\nHabitaciones disponibles: "+Nhabitaciones);
        }
        
        if (op.equals("Doble-Doble")){
            txtaInfoHabi.setText(null);
            txtaInfoHabi.append("Habitación Doble-Doble:Una habitación con dos camas dobles (o tal vez queen). Puede ser ocupado por una o más personas.\n");
            precio=300;
            txtaInfoHabi.append("El precio por noche: "+precio);
            Nhabitaciones=9;
            txtaInfoHabi.append("\nHabitaciones disponibles: "+Nhabitaciones);
        }
        
        if (op.equals("Suite")){
            txtaInfoHabi.setText(null);
            txtaInfoHabi.append("Habitación Suite:Una habitación individual con una cama y una sala de estar. A veces, el área para dormir está en un dormitorio separado del salón o la sala de estar.\n");
            precio=350;
            txtaInfoHabi.append("El precio por noche: "+precio);
            Nhabitaciones=6;
            txtaInfoHabi.append("\nHabitaciones disponibles: "+Nhabitaciones);
        }
        
        if (op.equals("Suite presidencial")){
            txtaInfoHabi.setText(null);
            txtaInfoHabi.append("Habitación Suite presidencial:Un salón o sala de estar conectada a uno o más dormitorios.\n");
            precio=500;
            txtaInfoHabi.append("El precio por noche: "+precio);
            Nhabitaciones=2;
            txtaInfoHabi.append("\nHabitaciones disponibles: "+Nhabitaciones);
        }
        
    }//GEN-LAST:event_btnEscogerHabiActionPerformed

    private void btnReservarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReservarActionPerformed
        int  disponible=0 ,reservar=0, noches=0 ,Nhabitaciones=0;
        float precio=0, total=0;
         DatosReserva hl=new DatosReserva(precio, (int)total, disponible, reservar, noches);
        
        String op = cmbTipoHabi.getSelectedItem().toString();
        if (op.equals("Individual")){
            precio=100;
            Nhabitaciones=10;
            reservar=Integer.parseInt(txtCantidadHabi.getText().trim());
            if (reservar>Nhabitaciones){
                JOptionPane.showMessageDialog(null,"No hay disponiblidad de habitaciones", "Error",0);
                txtCantidadHabi.setText(null);
            }else{
                String diaIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.DAY_OF_MONTH));
                String mesIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.MONTH));
                String anioIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.YEAR));
                String fechaIng = diaIng + "/" + mesIng + "/" + anioIng;
                noches= Integer.parseInt(txtCantidadDias.getText().trim());
            
                String NombreU=null ,cc,correo=null;
                NombreU=(JOptionPane.showInputDialog("Digite el nombre del usuario"));
                cc=(JOptionPane.showInputDialog("Digite el numero de documento del usuario"));
                correo=(JOptionPane.showInputDialog("Digite su correo electronico"));
            
                int confirmacion=JOptionPane.showConfirmDialog(null, "Nombre de Usuario: "+NombreU
                                            + "\nNumero de documento del usuario: "+cc
                                            + "\nCorreo electronico: "+correo
                                            + "\nEl precio de las "+hl.getReservar(reservar)+" habitaciones reservadas: $"+hl.getPrecio(precio, reservar) +
                                            "\nPrecio de las noches "+noches+" reservadas: $"+hl.getNoches(noches,precio)
                                            +"\nFecha de reserva: "+fechaIng
                                            +"\nTotal del servicio: "+hl.getTotal(total, noches, precio,reservar)
                                            + "\nLa información es correcta?");
                if (confirmacion == JOptionPane.YES_OPTION){
                    JOptionPane.showMessageDialog(null,"Reserva realizada");
                    NombreU=null;
                    cc=null;
                    correo=null;
                    txtaInfoHabi.setText(null);
                    dcFechaIngreso=null;
                    txtCantidadHabi.setText(null);
                    txtCantidadDias.setText(null);
                }else{
                    /*JOptionPane.showMessageDialog(null,"Vuelva a digitar la informacion");
                    NombreU=null;
                    cc=null;
                    correo=null;
                    txtaInfoHabi.setText(null);
                    dcFechaIngreso=null;
                    txtCantidadHabi.setText(null);
                    txtCantidadDias.setText(null);*/
                }
            }
        }
        
        if (op.equals("Double")){
            precio=150;
            Nhabitaciones=7;
            reservar=Integer.parseInt(txtCantidadHabi.getText().trim());
            if (reservar>Nhabitaciones){
                JOptionPane.showMessageDialog(null,"No hay disponiblidad de habitaciones", "Error",0);
                txtCantidadHabi.setText(null);
            }else{
                String diaIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.DAY_OF_MONTH));
                String mesIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.MONTH));
                String anioIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.YEAR));
                String fechaIng = diaIng + "/" + mesIng + "/" + anioIng;
                noches= Integer.parseInt(txtCantidadDias.getText().trim());
            
                String NombreU=null ,fechaDreserva = null,cc,correo=null;
                NombreU=(JOptionPane.showInputDialog("Digite el nombre del usuario"));
                cc=(JOptionPane.showInputDialog("Digite el numero de documento del usuario"));
                correo=(JOptionPane.showInputDialog("Digite su correo electronico"));
            
                int confirmacion=JOptionPane.showConfirmDialog(null, "Nombre de Usuario: "+NombreU
                                            + "\nNumero de documento del usuario: "+cc
                                            + "\nCorreo electronico: "+correo
                                            + "\nEl precio de las "+hl.getReservar(reservar)+" habitaciones reservadas: $"+hl.getPrecio(precio, reservar) +
                                            "\nPrecio de las noches"+noches+" reservadas: $"+hl.getNoches(noches,precio)
                                            +"\nFecha de reserva: "+fechaIng
                                            +"\nTotal del servicio: "+hl.getTotal(total, noches, precio,reservar)
                                            + "\nLa información es correcta?");
                if (confirmacion == JOptionPane.YES_OPTION){
                    JOptionPane.showMessageDialog(null,"Reserva realizada");
                    NombreU=null;
                    cc=null;
                    correo=null;
                    txtaInfoHabi.setText(null);
                    dcFechaIngreso=null;
                    txtCantidadHabi.setText(null);
                    txtCantidadDias.setText(null);
                }else{
                    /*JOptionPane.showMessageDialog(null,"Vuelva a digitar la informacion");
                    NombreU=null;
                    cc=null;
                    correo=null;
                    txtaInfoHabi.setText(null);
                    dcFechaIngreso=null;
                    txtCantidadHabi.setText(null);
                    txtCantidadDias.setText(null);*/
                }
            }
        }
        
        if (op.equals("Triple")){
            precio=200;
            Nhabitaciones=7;
            reservar=Integer.parseInt(txtCantidadHabi.getText().trim());
            if (reservar>Nhabitaciones){
                JOptionPane.showMessageDialog(null,"No hay disponiblidad de habitaciones", "Error",0);
                txtCantidadHabi.setText(null);
            }else{
                String diaIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.DAY_OF_MONTH));
                String mesIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.MONTH));
                String anioIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.YEAR));
                String fechaIng = diaIng + "/" + mesIng + "/" + anioIng;
                noches= Integer.parseInt(txtCantidadDias.getText().trim());
            
                String NombreU=null ,fechaDreserva = null,cc,correo=null;
                NombreU=(JOptionPane.showInputDialog("Digite el nombre del usuario"));
                cc=(JOptionPane.showInputDialog("Digite el numero de documento del usuario"));
                correo=(JOptionPane.showInputDialog("Digite su correo electronico"));
            
                int confirmacion=JOptionPane.showConfirmDialog(null, "Nombre de Usuario: "+NombreU
                                            + "\nNumero de documento del usuario: "+cc
                                            + "\nCorreo electronico: "+correo
                                            + "\nEl precio de las "+hl.getReservar(reservar)+" habitaciones reservadas: $"+hl.getPrecio(precio, reservar) +
                                            "\nPrecio de las noches "+noches+" reservadas: $"+hl.getNoches(noches,precio)
                                            +"\nFecha de reserva: "+fechaIng
                                            +"\nTotal del servicio: "+hl.getTotal(total, noches, precio,reservar)
                                            + "\nLa información es correcta?");
                if (confirmacion == JOptionPane.YES_OPTION){
                    JOptionPane.showMessageDialog(null,"Reserva realizada");
                    NombreU=null;
                    cc=null;
                    correo=null;
                    txtaInfoHabi.setText(null);
                    dcFechaIngreso=null;
                    txtCantidadHabi.setText(null);
                    txtCantidadDias.setText(null);
                }else{
                    /*JOptionPane.showMessageDialog(null,"Vuelva a digitar la informacion");
                    NombreU=null;
                    cc=null;
                    correo=null;
                    txtaInfoHabi.setText(null);
                    dcFechaIngreso=null;
                    txtCantidadHabi.setText(null);
                    txtCantidadDias.setText(null);*/
                }
            }
        }
        
        if (op.equals("Quad")){
            precio=250;
            Nhabitaciones=7;
            reservar=Integer.parseInt(txtCantidadHabi.getText().trim());
            if (reservar>Nhabitaciones){
                JOptionPane.showMessageDialog(null,"No hay disponiblidad de habitaciones", "Error",0);
                txtCantidadHabi.setText(null);
            }else{
                String diaIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.DAY_OF_MONTH));
                String mesIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.MONTH));
                String anioIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.YEAR));
                String fechaIng = diaIng + "/" + mesIng + "/" + anioIng;
                noches= Integer.parseInt(txtCantidadDias.getText().trim());
            
                String NombreU=null ,fechaDreserva = null,cc,correo=null;
                NombreU=(JOptionPane.showInputDialog("Digite el nombre del usuario"));
                cc=(JOptionPane.showInputDialog("Digite el numero de documento del usuario"));
                correo=(JOptionPane.showInputDialog("Digite su correo electronico"));
            
                int confirmacion=JOptionPane.showConfirmDialog(null, "Nombre de Usuario: "+NombreU
                                            + "\nNumero de documento del usuario: "+cc
                                            + "\nCorreo electronico: "+correo
                                            + "\nEl precio de las "+hl.getReservar(reservar)+" habitaciones reservadas: $"+hl.getPrecio(precio, reservar) +
                                            "\nPrecio de las noches "+noches+" reservadas: $"+hl.getNoches(noches,precio)
                                            +"\nFecha de reserva: "+fechaIng
                                            +"\nTotal del servicio: "+hl.getTotal(total, noches, precio,reservar)
                                            + "\nLa información es correcta?");
                if (confirmacion == JOptionPane.YES_OPTION){
                    JOptionPane.showMessageDialog(null,"Reserva realizada");
                    NombreU=null;
                    cc=null;
                    correo=null;
                    txtaInfoHabi.setText(null);
                    dcFechaIngreso=null;
                    txtCantidadHabi.setText(null);
                    txtCantidadDias.setText(null);
                }else{
                    /*JOptionPane.showMessageDialog(null,"Vuelva a digitar la informacion");
                    NombreU=null;
                    cc=null;
                    correo=null;
                    txtaInfoHabi.setText(null);
                    dcFechaIngreso=null;
                    txtCantidadHabi.setText(null);
                    txtCantidadDias.setText(null);*/
                }
            } 
        }
        
        if (op.equals("Queen")){
            precio=200;
            Nhabitaciones=8;
            reservar=Integer.parseInt(txtCantidadHabi.getText().trim());
            if (reservar>Nhabitaciones){
                JOptionPane.showMessageDialog(null,"No hay disponiblidad de habitaciones", "Error",0);
                txtCantidadHabi.setText(null);
            }else{
                String diaIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.DAY_OF_MONTH));
                String mesIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.MONTH));
                String anioIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.YEAR));
                String fechaIng = diaIng + "/" + mesIng + "/" + anioIng;
                noches= Integer.parseInt(txtCantidadDias.getText().trim());
            
                String NombreU=null ,fechaDreserva = null,cc,correo=null;
                NombreU=(JOptionPane.showInputDialog("Digite el nombre del usuario"));
                cc=(JOptionPane.showInputDialog("Digite el numero de documento del usuario"));
                correo=(JOptionPane.showInputDialog("Digite su correo electronico"));
            
                int confirmacion=JOptionPane.showConfirmDialog(null, "Nombre de Usuario: "+NombreU
                                            + "\nNumero de documento del usuario: "+cc
                                            + "\nCorreo electronico: "+correo
                                            + "\nEl precio de las "+hl.getReservar(reservar)+" habitaciones reservadas: $"+hl.getPrecio(precio, reservar) +
                                            "\nPrecio de las noches "+noches+" reservadas: $"+hl.getNoches(noches,precio)
                                            +"\nFecha de reserva: "+fechaIng
                                            +"\nTotal del servicio: "+hl.getTotal(total, noches, precio,reservar)
                                            + "\nLa información es correcta?");
                if (confirmacion == JOptionPane.YES_OPTION){
                    JOptionPane.showMessageDialog(null,"Reserva realizada");
                    NombreU=null;
                    cc=null;
                    correo=null;
                    txtaInfoHabi.setText(null);
                    dcFechaIngreso=null;
                    txtCantidadHabi.setText(null);
                    txtCantidadDias.setText(null);
                }else{
                    /*JOptionPane.showMessageDialog(null,"Vuelva a digitar la informacion");
                    NombreU=null;
                    cc=null;
                    correo=null;
                    txtaInfoHabi.setText(null);
                    dcFechaIngreso=null;
                    txtCantidadHabi.setText(null);
                    txtCantidadDias.setText(null);*/
                }
            }
        }
        
        if (op.equals("King")){
            precio=200;
            Nhabitaciones=8;
            reservar=Integer.parseInt(txtCantidadHabi.getText().trim());
            if (reservar>Nhabitaciones){
                JOptionPane.showMessageDialog(null,"No hay disponiblidad de habitaciones", "Error",0);
                txtCantidadHabi.setText(null);
            }else{
                String diaIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.DAY_OF_MONTH));
                String mesIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.MONTH));
                String anioIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.YEAR));
                String fechaIng = diaIng + "/" + mesIng + "/" + anioIng;
                noches= Integer.parseInt(txtCantidadDias.getText().trim());
            
                String NombreU=null ,fechaDreserva = null,cc,correo=null;
                NombreU=(JOptionPane.showInputDialog("Digite el nombre del usuario"));
                cc=(JOptionPane.showInputDialog("Digite el numero de documento del usuario"));
                correo=(JOptionPane.showInputDialog("Digite su correo electronico"));
            
                int confirmacion=JOptionPane.showConfirmDialog(null, "Nombre de Usuario: "+NombreU
                                            + "\nNumero de documento del usuario: "+cc
                                            + "\nCorreo electronico: "+correo
                                            + "\nEl precio de las "+hl.getReservar(reservar)+" habitaciones reservadas: $"+hl.getPrecio(precio, reservar) +
                                            "\nPrecio de las noches "+noches+" reservadas: $"+hl.getNoches(noches,precio)
                                            +"\nFecha de reserva: "+fechaIng
                                            +"\nTotal del servicio: "+hl.getTotal(total, noches, precio,reservar)
                                            + "\nLa información es correcta?");
                if (confirmacion == JOptionPane.YES_OPTION){
                    JOptionPane.showMessageDialog(null,"Reserva realizada");
                    NombreU=null;
                    cc=null;
                    correo=null;
                    txtaInfoHabi.setText(null);
                    dcFechaIngreso=null;
                    txtCantidadHabi.setText(null);
                    txtCantidadDias.setText(null);
                }else{
                    /*JOptionPane.showMessageDialog(null,"Vuelva a digitar la informacion");
                    NombreU=null;
                    cc=null;
                    correo=null;
                    txtaInfoHabi.setText(null);
                    dcFechaIngreso=null;
                    txtCantidadHabi.setText(null);
                    txtCantidadDias.setText(null);*/
                }
            }
        }
        
        if (op.equals("Doble-Doble")){
            precio=300;
            Nhabitaciones=9;
            reservar=Integer.parseInt(txtCantidadHabi.getText().trim());
            if (reservar>Nhabitaciones){
                JOptionPane.showMessageDialog(null,"No hay disponiblidad de habitaciones", "Error",0);
                txtCantidadHabi.setText(null);
            }else{
                String diaIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.DAY_OF_MONTH));
                String mesIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.MONTH));
                String anioIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.YEAR));
                String fechaIng = diaIng + "/" + mesIng + "/" + anioIng;
                noches= Integer.parseInt(txtCantidadDias.getText().trim());
            
                String NombreU=null ,fechaDreserva = null,cc,correo=null;
                NombreU=(JOptionPane.showInputDialog("Digite el nombre del usuario"));
                cc=(JOptionPane.showInputDialog("Digite el numero de documento del usuario"));
                correo=(JOptionPane.showInputDialog("Digite su correo electronico"));
            
                int confirmacion=JOptionPane.showConfirmDialog(null, "Nombre de Usuario: "+NombreU
                                            + "\nNumero de documento del usuario: "+cc
                                            + "\nCorreo electronico: "+correo
                                            + "\nEl precio de las "+hl.getReservar(reservar)+" habitaciones reservadas: $"+hl.getPrecio(precio, reservar) +
                                            "\nPrecio de las noches "+noches+" reservadas: $"+hl.getNoches(noches,precio)
                                            +"\nFecha de reserva: "+fechaIng
                                            +"\nTotal del servicio: "+hl.getTotal(total, noches, precio,reservar)
                                            + "\nLa información es correcta?");
                if (confirmacion == JOptionPane.YES_OPTION){
                    JOptionPane.showMessageDialog(null,"Reserva realizada");
                    NombreU=null;
                    cc=null;
                    correo=null;
                    txtaInfoHabi.setText(null);
                    dcFechaIngreso=null;
                    txtCantidadHabi.setText(null);
                    txtCantidadDias.setText(null);
                }else{
                    /*JOptionPane.showMessageDialog(null,"Vuelva a digitar la informacion");
                    NombreU=null;
                    cc=null;
                    correo=null;
                    txtaInfoHabi.setText(null);
                    dcFechaIngreso=null;
                    txtCantidadHabi.setText(null);
                    txtCantidadDias.setText(null);*/
                }
            }
        }
        
        if (op.equals("Suite")){
            precio=350;
            Nhabitaciones=6;
            reservar=Integer.parseInt(txtCantidadHabi.getText().trim());
            if (reservar>Nhabitaciones){
                JOptionPane.showMessageDialog(null,"No hay disponiblidad de habitaciones", "Error",0);
                txtCantidadHabi.setText(null);
            }else{
                String diaIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.DAY_OF_MONTH));
                String mesIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.MONTH));
                String anioIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.YEAR));
                String fechaIng = diaIng + "/" + mesIng + "/" + anioIng;
                noches= Integer.parseInt(txtCantidadDias.getText().trim());
            
                String NombreU=null ,fechaDreserva = null,cc,correo=null;
                NombreU=(JOptionPane.showInputDialog("Digite el nombre del usuario"));
                cc=(JOptionPane.showInputDialog("Digite el numero de documento del usuario"));
                correo=(JOptionPane.showInputDialog("Digite su correo electronico"));
            
                int confirmacion=JOptionPane.showConfirmDialog(null, "Nombre de Usuario: "+NombreU
                                            + "\nNumero de documento del usuario: "+cc
                                            + "\nCorreo electronico: "+correo
                                            + "\nEl precio de las "+hl.getReservar(reservar)+" habitaciones reservadas: $"+hl.getPrecio(precio, reservar) +
                                            "\nPrecio de las noches "+noches+" reservadas: $"+hl.getNoches(noches,precio)
                                            +"\nFecha de reserva: "+fechaIng
                                            +"\nTotal del servicio: "+hl.getTotal(total, noches, precio,reservar)
                                            + "\nLa información es correcta?");
                if (confirmacion == JOptionPane.YES_OPTION){
                    JOptionPane.showMessageDialog(null,"Reserva realizada");
                    NombreU=null;
                    cc=null;
                    correo=null;
                    txtaInfoHabi.setText(null);
                    dcFechaIngreso=null;
                    txtCantidadHabi.setText(null);
                    txtCantidadDias.setText(null);
                }else{
                    /*JOptionPane.showMessageDialog(null,"Vuelva a digitar la informacion");
                    NombreU=null;
                    cc=null;
                    correo=null;
                    txtaInfoHabi.setText(null);
                    dcFechaIngreso=null;
                    txtCantidadHabi.setText(null);
                    txtCantidadDias.setText(null);*/
                }
            }
        }
        
        if (op.equals("Suite presidencial")){
            precio=500;
            Nhabitaciones=2;
            reservar=Integer.parseInt(txtCantidadHabi.getText().trim());
            if (reservar>Nhabitaciones){
                JOptionPane.showMessageDialog(null,"No hay disponiblidad de habitaciones", "Error",0);
                txtCantidadHabi.setText(null);
            }else{
                String diaIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.DAY_OF_MONTH));
                String mesIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.MONTH));
                String anioIng =Integer.toString(dcFechaIngreso.getCalendar().get(Calendar.YEAR));
                String fechaIng = diaIng + "/" + mesIng + "/" + anioIng;
                noches= Integer.parseInt(txtCantidadDias.getText().trim());
            
                String NombreU=null ,fechaDreserva = null,cc,correo=null;
                NombreU=(JOptionPane.showInputDialog("Digite el nombre del usuario"));
                cc=(JOptionPane.showInputDialog("Digite el numero de documento del usuario"));
                correo=(JOptionPane.showInputDialog("Digite su correo electronico"));
            
                int confirmacion=JOptionPane.showConfirmDialog(null, "Nombre de Usuario: "+NombreU
                                            + "\nNumero de documento del usuario: "+cc
                                            + "\nCorreo electronico: "+correo
                                            + "\nEl precio de las "+hl.getReservar(reservar)+" habitaciones reservadas: $"+hl.getPrecio(precio, reservar) +
                                            "\nPrecio de las noches "+noches+" reservadas: $"+hl.getNoches(noches,precio)
                                            +"\nFecha de reserva: "+fechaIng
                                            +"\nTotal del servicio: "+hl.getTotal(total, noches, precio,reservar)
                                            + "\nLa información es correcta?");
                if (confirmacion == JOptionPane.YES_OPTION){
                    JOptionPane.showMessageDialog(null,"Reserva realizada");
                    NombreU=null;
                    cc=null;
                    correo=null;
                    txtaInfoHabi.setText(null);
                    dcFechaIngreso=null;
                    txtCantidadHabi.setText(null);
                    txtCantidadDias.setText(null);
                }else{
                    /*JOptionPane.showMessageDialog(null,"Vuelva a digitar la informacion");
                    NombreU=null;
                    cc=null;
                    correo=null;
                    txtaInfoHabi.setText(null);
                    dcFechaIngreso=null;
                    txtCantidadHabi.setText(null);
                    txtCantidadDias.setText(null);*/
                }
            }
        }
        
    }//GEN-LAST:event_btnReservarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HotelG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HotelG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HotelG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HotelG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HotelG().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEscogerHabi;
    private javax.swing.JButton btnReservar;
    private javax.swing.JComboBox<String> cmbTipoHabi;
    private com.toedter.calendar.JDateChooser dcFechaIngreso;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtCantidadDias;
    private javax.swing.JTextField txtCantidadHabi;
    private javax.swing.JTextArea txtaInfoHabi;
    // End of variables declaration//GEN-END:variables
}
